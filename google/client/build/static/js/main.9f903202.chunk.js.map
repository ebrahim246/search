{"version":3,"sources":["index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","Container","_ref","fluid","children","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","SearchForm","props","style","marginTop","value","search","type","name","placeholder","onChange","handleInputChange","onClick","handleFormSubmit","SearchResult","books","length","book","id","title","key","_id","src","image","alt","author","description","event","handleSavedButton","href","link","target","SavedResult","savedBooks","savedbook","authors","handleDeleteButton","Nav","SearchBooks","state","error","message","_this","setState","preventDefault","axios","get","then","res","data","items","Error","results","result","volumeInfo","imageLinks","thumbnail","infoLink","catch","err","filter","post","alert","console","log","this","Component","SaveBook","delete","_this2","componentDidMount","_this3","App","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","exact","path","component","unregister","navigator","serviceWorker","ready","registration","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","swUrl","fetch","response","status","headers","indexOf","reload","register","onupdatefound","installing","onstatechange","registerServiceWorker"],"mappings":"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","file":"static/js/main.9f903202.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './index.css'\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    window.location.hostname === \"[::1]\" ||\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\nfunction Container({ fluid, children }) {\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\nfunction Row({ fluid, children }) {\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\nfunction Col({ size, children }) {\n    return (\n      <div\n        className={size\n          .split(\" \")\n          .map(size => \"col-\" + size)\n          .join(\" \")}\n      >\n        {children}\n      </div>\n    );\n}\nconst SearchForm = props => {\n    return (\n        <form>\n            <div className=\"form-group\" style={{marginTop: \"50px\"}}>\n                <label className=\"BookSearchLabel\"><h3>(React) Google Books Search</h3></label>\n                <br></br>\n                <label className=\"BookSearchLabel\"><h5>Search For and Save Books of Interest</h5></label>\n                <br></br>\n                <input className=\"col-12 form-control\"\n                    value={props.search}\n                    type=\"text\"\n                    name=\"searchBook\"\n                    placeholder=\"Enter Book's Name\"\n                    onChange={props.handleInputChange}\n                />\n            </div>\n            <button type=\"submit\" className=\"submitBtn btn btn-primary\" onClick={props.handleFormSubmit}>\n                Submit\n            </button>\n        </form>\n    )\n}\nconst SearchResult = props => {\n    return (props.books.length === 0) ? (\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Search Results</h3>\n                </div>\n            </div>\n        </div>\n    ) : (\n            <div className=\"card\">\n                <div className=\"card-body player\">\n                    <div className=\"article\">\n                        <h3>Search Results</h3>\n                        {props.books.map(book => {\n                            return (\n                                <li className=\"search-list list-group-item\">\n                                    <Row className=\"SearchResult row\" id={book.title + \"Card\"} key={book._id}>\n                                        {/* col-3 show image of the book */}\n                                        <Col size=\"2\" className=\"bookImage\">\n                                            <img src={book.image} alt={book.title} />\n                                        </Col>\n                                        <Col size=\"1\" className=\"emptyCol\"/>\n                                        {/* col-9 show information of the book */}\n                                        <Col size=\"9\" className=\"bookInfo\">\n                                            <Row>\n                                                <h3 className=\"bookTitle\">{book.title}</h3>\n                                            </Row>\n                                            <Row>\n                                                <h4 className=\"bookAuthor\">{book.author}</h4>\n                                            </Row>\n                                            <Row>\n                                                <p className=\"bookDescription\">{book.description}</p>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                    <br></br>\n                                    <Row className=\"buttonDiv \">\n                                        <button className=\"saveBook btn btn-primary\" id={book.id} onClick={(event) => props.handleSavedButton(event)}>\n                                            Save\n                                        </button>\n                                        <a href={book.link} target=\"_blank\">\n                                            <button className=\"viewBook btn btn-primary\">\n                                                View\n                                        </button>\n                                        </a>\n                                    </Row>\n                                </li>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n}\nconst SavedResult = props => {\n    return (props.savedBooks.length === 0) ? (\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Books that You Saved</h3>\n                </div>\n            </div>\n        </div>\n    ):(\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Books that You Saved</h3>\n                    {props.savedBooks.map(savedbook => {\n                        return (\n                            <li className=\"saved-list list-group-item\">\n                                <Row className=\"SearchResult\" id={savedbook.title + \"Card\"} key={savedbook._id}>\n                                    {/* col-3 show image of the book */}\n                                    <Col size=\"2\" className=\"bookImage\">\n                                        <img src={savedbook.image} alt={savedbook.title} />\n                                    </Col>\n                                    <Col size=\"1\" className=\"emptyCol\"/>\n                                    {/* col-9 show information of the book */}\n                                    <Col size=\"9\" className=\"bookInfo\">\n                                        <Row>\n                                            <h2 className=\"bookTitle\">{savedbook.title}</h2>\n                                        </Row>\n                                        <Row>\n                                            <h3 className=\"bookAuthor\">{savedbook.authors}</h3>\n                                        </Row>\n                                        <Row>\n                                            <p className=\"bookDescription\">{savedbook.description}</p>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                                <br></br>\n                                <Row className=\"buttonDiv \">\n                                    <button className=\"deleteBook btn btn-primary\" id={savedbook._id} onClick={() => props.handleDeleteButton(savedbook._id)}>\n                                        Delete\n                                    </button>\n                                    <a href={savedbook.link} target=\"_blank\">\n                                        <button className=\"viewBook btn btn-primary\">\n                                            View\n                                        </button>\n                                    </a>\n                                </Row>\n                            </li>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-primary bg-info\">\n            <a className=\"navbar-brand\" href=\"/\">\n                <h2 className=\"text-success\">Google Book Search</h2>\n            </a>\n            <div className=\"d-flex justify-content-end\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\" id=\"home\">\n                        <a className=\"nav-link\" href=\"/\"><button type=\"button\" className=\"btn btn-primary text-white\">Search</button></a>\n                    </li>\n                    <li className=\"nav-item\" id=\"report\">\n                        <a className=\"nav-link\" href=\"/saved\"><button type=\"button\" className=\"btn btn-primary text-white\">Saved</button></a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\nclass SearchBooks extends Component {\n    state = {\n        search: \"\",\n        books: [],\n        error: \"\",\n        message: \"\"\n    };\n\n    handleInputChange = event => {\n        this.setState({ search: event.target.value })\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + (this.state.search))\n            .then(res => {\n                if (res.data.items === \"error\") {\n                    throw new Error(res.data.items);\n                }\n                else {\n                    let results = res.data.items\n                    results = results.map(result => {\n                        result = {\n                            key: result.id,\n                            id: result.id,\n                            title: result.volumeInfo.title,\n                            author: result.volumeInfo.authors,\n                            description: result.volumeInfo.description,\n                            image: result.volumeInfo.imageLinks.thumbnail,\n                            link: result.volumeInfo.infoLink\n                        }\n                        return result;\n                    })\n                    this.setState({ books: results, error: \"\" })\n                }\n            })\n            .catch(err => this.setState({ error: err.items }));\n    }\n\n    handleSavedButton = event => {\n        event.preventDefault();\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\n        savedBooks = savedBooks[0];\n        axios.post(\"/api/books\", savedBooks)\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\n            .catch(err => console.log(err))\n    }\n    render() {\n        return (\n            <Container fluid>\n                <Container>\n                    <Row>\n                        <Col size=\"12\">\n                            <SearchForm\n                                handleFormSubmit={this.handleFormSubmit}\n                                handleInputChange={this.handleInputChange}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <br></br>\n                <Container>\n                    <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\n                </Container>\n            </Container>\n        )\n    }\n\n}\nclass SaveBook extends Component {\n    state = {\n        savedBooks: []\n    };\n\n    componentDidMount() {\n        axios.get(\"/api/books\")\n            .then(res => this.setState({ savedBooks: res.data }))\n            .catch(err => console.log(err))\n    }\n\n    handleDeleteButton = id => {\n        axios.delete(\"/api/books/\" + id)\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Container fluid className=\"container\">\n                <Container>\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\n                </Container>\n            </Container>\n        )\n    }\n}\n\nfunction App() {\n    return (\n    <Router>\n        <div>\n            <Nav/>\n            <Switch>\n                <Route exact path=\"/\" component={SearchBooks} />\n                <Route exact path=\"/saved\" component={SaveBook} />\n                <Route exact path=\"/saved/:id\" component={SaveBook} />\n            </Switch>\n        </div>\n    </Router>\n);\n}\n\nfunction registerServiceWorker() {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (!isLocalhost) {\n                navigator.serviceWorker\n                    .register(swUrl)\n                    .then(registration => {\n                        registration.onupdatefound = () => {\n                            const installingWorker = registration.installing;\n                            installingWorker.onstatechange = () => {\n                                //Report error here for the content not found.\n                            };\n                        };\n                    })\n                    .catch(error => {\n                        //Report error here\n                    });\n            } else {\n                fetch(swUrl)\n                    .then(response => {\n                        if (\n                            response.status === 404 ||\n                            response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n                        ) {\n                            navigator.serviceWorker.ready.then(registration => {\n                                registration.unregister().then(() => {\n                                    window.location.reload();\n                                });\n                            });\n                        } else {\n                            navigator.serviceWorker\n                                .register(swUrl)\n                                .then(registration => {\n                                    registration.onupdatefound = () => {\n                                        //Report error based on the if else condition\n                                    };\n                                })\n                                .catch(error => {\n                                    //Report error here.\n                                });\n                        }\n                    })\n                    .catch(() => {\n                        //Report error here.\n                    });\n            }\n        });\n    }\n}\n\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\nReactDOM.render( < App / > , document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}